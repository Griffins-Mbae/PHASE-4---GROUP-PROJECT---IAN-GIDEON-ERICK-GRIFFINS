{"ast":null,"code":"var _jsxFileName = \"/Users/Erick/Documents/group4phase4/client/src/components/EventManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventManagement() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false); // Assuming isAdmin state for admin check\n\n  useEffect(() => {\n    async function fetchEvents() {\n      try {\n        const response = await axios.get('/events');\n        setEvents(response.data);\n        // Assuming isAdmin logic based on user roles or token\n        const userRole = localStorage.getItem('userRole');\n        if (userRole === 'admin') {\n          setIsAdmin(true);\n        }\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    }\n    fetchEvents();\n  }, []);\n  const handleRegister = async eventId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`/events/register/${eventId}`, null, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data.message === 'Already registered for the event') {\n        alert('You have already registered for this event.');\n      } else {\n        console.log(response.data.message);\n        const updatedEvents = events.map(event => event.id === eventId ? {\n          ...event,\n          registered: true\n        } : event);\n        setEvents(updatedEvents);\n      }\n    } catch (error) {\n      console.error('Error registering for event:', error);\n      if (error.response) {\n        console.log('Response data:', error.response.data);\n        if (error.response.data.message === 'Already registered for the event') {\n          alert('You have already registered for this event.');\n        }\n      }\n    }\n  };\n  const handleDelete = async eventId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.delete(`/events/${eventId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data.message);\n      const updatedEvents = events.filter(event => event.id !== eventId);\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Upcoming Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-lg w-full\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-accent1 shadow-md rounded px-8 pt-6 pb-8 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2\",\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-2\",\n          children: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-2\",\n          children: [\"Date: \", new Date(event.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-2\",\n          children: [\"Location: \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), event.registered ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-green-500 mb-2\",\n          children: \"Registered for this event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          onClick: () => handleRegister(event.id),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\",\n          onClick: () => handleDelete(event.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(EventManagement, \"PthIvqZ9ZNbTM8VGNgajF2SgaPI=\");\n_c = EventManagement;\nexport default EventManagement;\nvar _c;\n$RefreshReg$(_c, \"EventManagement\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","EventManagement","_s","events","setEvents","isAdmin","setIsAdmin","fetchEvents","response","get","data","userRole","localStorage","getItem","error","console","handleRegister","eventId","token","post","headers","Authorization","message","alert","log","updatedEvents","map","event","id","registered","handleDelete","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","Date","date","toLocaleDateString","location","onClick","_c","$RefreshReg$"],"sources":["/Users/Erick/Documents/group4phase4/client/src/components/EventManagement.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction EventManagement() {\n  const [events, setEvents] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false); // Assuming isAdmin state for admin check\n\n  useEffect(() => {\n    async function fetchEvents() {\n      try {\n        const response = await axios.get('/events');\n        setEvents(response.data);\n        // Assuming isAdmin logic based on user roles or token\n        const userRole = localStorage.getItem('userRole');\n        if (userRole === 'admin') {\n          setIsAdmin(true);\n        }\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    }\n    fetchEvents();\n  }, []);\n\n  const handleRegister = async (eventId) => {\n    try {\n      const token = localStorage.getItem('token');\n\n      const response = await axios.post(\n        `/events/register/${eventId}`,\n        null,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (response.data.message === 'Already registered for the event') {\n        alert('You have already registered for this event.');\n      } else {\n        console.log(response.data.message);\n\n        const updatedEvents = events.map(event =>\n          event.id === eventId ? { ...event, registered: true } : event\n        );\n        setEvents(updatedEvents);\n      }\n    } catch (error) {\n      console.error('Error registering for event:', error);\n\n      if (error.response) {\n        console.log('Response data:', error.response.data);\n        if (error.response.data.message === 'Already registered for the event') {\n          alert('You have already registered for this event.');\n        }\n      }\n    }\n  };\n\n  const handleDelete = async (eventId) => {\n    try {\n      const token = localStorage.getItem('token');\n\n      const response = await axios.delete(`/events/${eventId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      console.log(response.data.message);\n\n      const updatedEvents = events.filter(event => event.id !== eventId);\n      setEvents(updatedEvents);\n    } catch (error) {\n      console.error('Error deleting event:', error);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen\">\n      <h2 className=\"text-2xl font-bold mb-4\">Upcoming Events</h2>\n      <div className=\"max-w-lg w-full\">\n        {events.map(event => (\n          <div key={event.id} className=\"bg-accent1 shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n            <h3 className=\"text-xl font-bold mb-2\">{event.title}</h3>\n            <p className=\"text-gray-700 mb-2\">{event.description}</p>\n            <p className=\"text-gray-700 mb-2\">Date: {new Date(event.date).toLocaleDateString()}</p>\n            <p className=\"text-gray-700 mb-2\">Location: {event.location}</p>\n            {event.registered ? (\n              <p className=\"text-green-500 mb-2\">Registered for this event</p>\n            ) : (\n              <button\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                onClick={() => handleRegister(event.id)}\n              >\n                Register\n              </button>\n            )}\n            {isAdmin && (\n              <button\n                className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-4\"\n                onClick={() => handleDelete(event.id)}\n              >\n                Delete\n              </button>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default EventManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}