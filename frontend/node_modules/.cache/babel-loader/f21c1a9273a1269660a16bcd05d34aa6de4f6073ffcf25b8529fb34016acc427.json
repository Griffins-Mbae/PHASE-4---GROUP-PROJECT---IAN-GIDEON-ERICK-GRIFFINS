{"ast":null,"code":"var _jsxFileName = \"/Users/Erick/Documents/group4phase4/client/src/components/EventManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventManagement() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [messageEventId, setMessageEventId] = useState(null);\n  useEffect(() => {\n    async function fetchEvents() {\n      try {\n        const response = await axios.get('/events');\n        setEvents(response.data);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    }\n    fetchEvents();\n  }, []);\n  const handleRegister = async eventId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`/events/register/${eventId}`, null, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data.message === 'Already registered for the event') {\n        setMessage(\"You have already registered for this event.\");\n        setTimeout(() => {\n          setMessage(null);\n          setMessageEventId(null);\n        }, 1000);\n      } else {\n        setMessage('Registered for the event!');\n        setMessageEventId(eventId);\n        setTimeout(() => {\n          setMessage(null);\n          setMessageEventId(null);\n        }, 2000);\n        const updatedEvents = events.map(event => event.id === eventId ? {\n          ...event,\n          registered: true\n        } : event);\n        setEvents(updatedEvents);\n      }\n    } catch (error) {\n      console.error('Error registering for event:', error);\n      if (error.response) {\n        console.log('Response data:', error.response.data);\n        if (error.response.data.message === 'Already registered for the event') {\n          setMessage('You have already registered for this event.');\n          setMessageEventId(eventId);\n          setTimeout(() => {\n            setMessage(null);\n            setMessageEventId(null);\n          }, 2000);\n        } else {\n          setMessage('An error occurred. Please try again.');\n          setMessageEventId(eventId);\n          setTimeout(() => {\n            setMessage(null);\n            setMessageEventId(null);\n          }, 1000);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Upcoming Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl w-full\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-accent shadow-md rounded-lg px-8 py-6 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2\",\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-2\",\n          children: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-2\",\n          children: [\"Date: \", new Date(event.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-2\",\n          children: [\"Location: \", event.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), event.registered ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-green-500 mb-2\",\n          children: \"Registered for this event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            onClick: () => handleRegister(event.id),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), messageEventId === event.id && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white mt-3\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(EventManagement, \"ScZwO4EB59A95uXENa7crPxQU4I=\");\n_c = EventManagement;\nexport default EventManagement;\nvar _c;\n$RefreshReg$(_c, \"EventManagement\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","EventManagement","_s","events","setEvents","message","setMessage","messageEventId","setMessageEventId","fetchEvents","response","get","data","error","console","handleRegister","eventId","token","localStorage","getItem","post","headers","Authorization","setTimeout","updatedEvents","map","event","id","registered","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","Date","date","toLocaleDateString","location","onClick","_c","$RefreshReg$"],"sources":["/Users/Erick/Documents/group4phase4/client/src/components/EventManagement.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction EventManagement() {\n  const [events, setEvents] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [messageEventId, setMessageEventId] = useState(null);\n\n  useEffect(() => {\n    async function fetchEvents() {\n      try {\n        const response = await axios.get('/events');\n        setEvents(response.data);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    }\n    fetchEvents();\n  }, []);\n\n  const handleRegister = async (eventId) => {\n    try {\n      const token = localStorage.getItem('token');\n\n      const response = await axios.post(\n        `/events/register/${eventId}`,\n        null,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (response.data.message === 'Already registered for the event') {\n        setMessage(\"You have already registered for this event.\");\n        setTimeout(() => {\n          setMessage(null);\n          setMessageEventId(null);\n        }, 1000);\n      } else {\n        setMessage('Registered for the event!');\n        setMessageEventId(eventId);\n        setTimeout(() => {\n          setMessage(null);\n          setMessageEventId(null);\n        }, 2000);\n\n        const updatedEvents = events.map((event) =>\n          event.id === eventId ? { ...event, registered: true } : event\n        );\n        setEvents(updatedEvents);\n      }\n    } catch (error) {\n      console.error('Error registering for event:', error);\n\n      if (error.response) {\n        console.log('Response data:', error.response.data);\n        if (error.response.data.message === 'Already registered for the event') {\n          setMessage('You have already registered for this event.');\n          setMessageEventId(eventId);\n          setTimeout(() => {\n            setMessage(null);\n            setMessageEventId(null);\n          }, 2000);\n        } else {\n          setMessage('An error occurred. Please try again.');\n          setMessageEventId(eventId);\n          setTimeout(() => {\n            setMessage(null);\n            setMessageEventId(null);\n          }, 1000);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen\">\n      <h2 className=\"text-2xl font-bold mb-4\">Upcoming Events</h2>\n      <div className=\"max-w-3xl w-full\">\n        {events.map((event) => (\n          <div key={event.id} className=\"bg-accent shadow-md rounded-lg px-8 py-6 mb-4\">\n            <h3 className=\"text-xl font-bold mb-2\">{event.title}</h3>\n            <p className=\"text-gray-700 mb-2\">{event.description}</p>\n            <p className=\"text-gray-700 mb-2\">Date: {new Date(event.date).toLocaleDateString()}</p>\n            <p className=\"text-gray-700 mb-2\">Location: {event.location}</p>\n            {event.registered ? (\n              <p className=\"text-green-500 mb-2\">Registered for this event</p>\n            ) : (\n              <>\n                <button\n                  className=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                  onClick={() => handleRegister(event.id)}\n                >\n                  Register\n                </button>\n                {messageEventId === event.id && (\n                  <p className=\"text-white mt-3\">{message}</p>\n                )}\n              </>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default EventManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}