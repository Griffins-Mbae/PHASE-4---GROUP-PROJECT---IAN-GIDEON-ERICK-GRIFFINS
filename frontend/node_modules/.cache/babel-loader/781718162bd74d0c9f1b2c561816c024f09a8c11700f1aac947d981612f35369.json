{"ast":null,"code":"var _jsxFileName = \"/Users/Erick/Documents/group4phase4/client/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [message, setMessage] = useState(null); // State to hold login message\n  const navigate = useNavigate(); // Hook for navigation\n  const [showPassword, setShowPassword] = useState(false); // State for password visibility toggle\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email').required('Email is required'),\n      password: Yup.string().required('Password is required')\n    }),\n    onSubmit: async values => {\n      try {\n        const response = await axios.post('/login', values);\n        if (response.status === 200) {\n          const {\n            token\n          } = response.data; // Assuming the token is in response.data.token\n          localStorage.setItem('token', token); // Store the token in local storage\n          setMessage('Logged in successfully');\n          setTimeout(() => {\n            setMessage(null); // Clear success message after 3 seconds\n          }, 3000);\n          formik.resetForm(); // Reset form after successful login\n          navigate('/events'); // Redirect to the events page\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error logging in:', error);\n        setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Invalid credentials. Please try again.');\n        setTimeout(() => {\n          setMessage(null); // Clear error message after 3 seconds\n        }, 3000);\n      }\n    }\n  });\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"text-blue-600\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: message === 'Logged in successfully' ? 'text-green-500 mb-4' : 'text-red-500 mb-4',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          className: \"rounded-md border border-blue-300 focus:outline-none py-2 px-3 w-full text-gray-700 leading-tight focus:shadow-outline mt-2\",\n          onChange: formik.handleChange,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), formik.touched.email && formik.errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-xs mt-1\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            name: \"password\",\n            type: showPassword ? 'text' : 'password',\n            placeholder: \"Enter your password\",\n            className: \"rounded-md border border-blue-300 focus:outline-none py-2 px-3 w-full text-gray-700 leading-tight focus:shadow-outline mt-2\",\n            onChange: formik.handleChange,\n            value: formik.values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"absolute inset-y-0 right-0 px-4 py-2 focus:outline-none\",\n            onClick: togglePasswordVisibility,\n            children: showPassword ? 'Hide' : 'Show'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), formik.touched.password && formik.errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-xs mt-1\",\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-8 mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"border border-accent1 p-3 rounded text-white bg-blue-500 hover:bg-blue-700 focus:outline-none focus:shadow-outline\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"6uE9zafcIcLxSbAN7EuCScp6bNM=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useFormik","Yup","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","message","setMessage","navigate","showPassword","setShowPassword","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","values","response","post","status","token","data","localStorage","setItem","setTimeout","resetForm","error","_error$response","_error$response$data","console","togglePasswordVisibility","className","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","type","placeholder","onChange","handleChange","value","touched","errors","onClick","_c","$RefreshReg$"],"sources":["/Users/Erick/Documents/group4phase4/client/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login() {\n    const [message, setMessage] = useState(null); // State to hold login message\n    const navigate = useNavigate(); // Hook for navigation\n    const [showPassword, setShowPassword] = useState(false); // State for password visibility toggle\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string().email('Invalid email').required('Email is required'),\n            password: Yup.string().required('Password is required')\n        }),\n        onSubmit: async (values) => {\n            try {\n                const response = await axios.post('/login', values);\n                if (response.status === 200) {\n                    const { token } = response.data; // Assuming the token is in response.data.token\n                    localStorage.setItem('token', token); // Store the token in local storage\n                    setMessage('Logged in successfully');\n                    setTimeout(() => {\n                        setMessage(null); // Clear success message after 3 seconds\n                    }, 3000);\n                    formik.resetForm(); // Reset form after successful login\n                    navigate('/events'); // Redirect to the events page\n                }\n            } catch (error) {\n                console.error('Error logging in:', error);\n                setMessage(error.response?.data?.message || 'Invalid credentials. Please try again.');\n                setTimeout(() => {\n                    setMessage(null); // Clear error message after 3 seconds\n                }, 3000);\n            }\n        }\n    });\n\n    const togglePasswordVisibility = () => {\n        setShowPassword(!showPassword);\n    };\n\n    return (\n        <div className='m-5'>\n            <form className='text-blue-600' onSubmit={formik.handleSubmit}>\n                <h2 className='text-xl'>Login</h2>\n                {message && <p className={message === 'Logged in successfully' ? 'text-green-500 mb-4' : 'text-red-500 mb-4'}>{message}</p>}\n                <div className='mt-6'>\n                    <label htmlFor='email' className='block text-sm font-medium text-gray-700'>Email</label>\n                    <input\n                        id='email'\n                        name='email'\n                        type='email'\n                        placeholder='Enter your email'\n                        className='rounded-md border border-blue-300 focus:outline-none py-2 px-3 w-full text-gray-700 leading-tight focus:shadow-outline mt-2'\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                    />\n                    {formik.touched.email && formik.errors.email && (\n                        <p className='text-red-500 text-xs mt-1'>{formik.errors.email}</p>\n                    )}\n                </div>\n                <div className='mt-6'>\n                    <label htmlFor='password' className='block text-sm font-medium text-gray-700'>Password</label>\n                    <div className='relative'>\n                        <input\n                            id='password'\n                            name='password'\n                            type={showPassword ? 'text' : 'password'}\n                            placeholder='Enter your password'\n                            className='rounded-md border border-blue-300 focus:outline-none py-2 px-3 w-full text-gray-700 leading-tight focus:shadow-outline mt-2'\n                            onChange={formik.handleChange}\n                            value={formik.values.password}\n                        />\n                        <button\n                            type='button'\n                            className='absolute inset-y-0 right-0 px-4 py-2 focus:outline-none'\n                            onClick={togglePasswordVisibility}\n                        >\n                            {showPassword ? 'Hide' : 'Show'}\n                        </button>\n                    </div>\n                    {formik.touched.password && formik.errors.password && (\n                        <p className='text-red-500 text-xs mt-1'>{formik.errors.password}</p>\n                    )}\n                </div>\n                <div className='ml-8 mt-6'>\n                    <button\n                        type='submit'\n                        className='border border-accent1 p-3 rounded text-white bg-blue-500 hover:bg-blue-700 focus:outline-none focus:shadow-outline'\n                    >\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}